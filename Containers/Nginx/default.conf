server {
    listen 443 ssl;
    server_name transcendence-42.fr www.transcendence-42.fr;

    ssl_certificate /etc/nginx/ssl/fullchain1.pem;
    ssl_certificate_key /etc/nginx/ssl/privkey1.pem;

    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' https://cdn.jsdelivr.net; style-src 'self' https://cdn.jsdelivr.net https://fonts.googleapis.com 'unsafe-inline'; font-src 'self' https://fonts.gstatic.com data:; img-src 'self' http://www.w3.org data: https://cdn.intra.42.fr; connect-src 'self' https://api.intra.42.fr; frame-ancestors 'none';" always;

	location /ws/ {
        proxy_pass http://django:8000;  # Redirige vers le conteneur Daphne
        proxy_http_version 1.1;  # Nécessaire pour WebSocket
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location / {
        proxy_pass http://django:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /static/ {
		alias /app/staticfiles/;
		autoindex on;
    }

	location /media/ {
		alias /app/mediafiles/;
		autoindex on;
		autoindex_format html;  # Affiche la liste sous forme de lien HTML
	}

    # Optionnel : pour gérer d'autres types MIME si nécessaire
    types {
        text/css css;
        text/html html;
        application/javascript js;
		image/png png;
		image/jpeg jpg jpeg;
    }

    error_log /var/log/nginx/error.log;
    access_log /var/log/nginx/access.log;
}

server {
    listen 80 default_server;
    server_name _;
    
    # Ne pas faire attention (pour le certif ssh)
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
        try_files $uri =404;
    }
	# location ~ /.well-known {
  	# 	allow all;
	# }
    
    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 8080;
    location /nginx_status {
        stub_status; 
        allow 172.0.0.0/8 ;
        deny all;
    }
}
